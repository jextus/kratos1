// <auto-generated />
using System;
using Krat1.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace kratos1.Server.Migrations
{
    [DbContext(typeof(KratosContext))]
    partial class KratosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Krat1.Server.Models.Kratos.ActividadEconomicas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoCiiu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("ActividadEconomicas");
                });

            modelBuilder.Entity("Krat1.Server.Models.Kratos.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("empresaId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Categorias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("categoriapadreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("categoriapadreId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Empresas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("actividadId")
                        .HasColumnType("int");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("confirmarContraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("dv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombreComercial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("razonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("regimenId")
                        .HasColumnType("int");

                    b.Property<string>("representanteLegal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tiposociedadId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("actividadId");

                    b.HasIndex("regimenId");

                    b.HasIndex("tiposociedadId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Impuestos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("actividadId")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("porcentaje")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("regimenId")
                        .HasColumnType("int");

                    b.Property<int>("sociedadesId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("actividadId");

                    b.HasIndex("regimenId");

                    b.HasIndex("sociedadesId");

                    b.ToTable("Impuestos");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Inventarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.Property<int>("puntoventaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productoId");

                    b.HasIndex("puntoventaId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Modulos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Permisos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("consultar")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("editar")
                        .HasColumnType("bit");

                    b.Property<bool>("eliminar")
                        .HasColumnType("bit");

                    b.Property<bool>("exportar")
                        .HasColumnType("bit");

                    b.Property<bool>("importar")
                        .HasColumnType("bit");

                    b.Property<bool>("insertar")
                        .HasColumnType("bit");

                    b.Property<bool>("leer")
                        .HasColumnType("bit");

                    b.Property<int>("modulosId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("rolesId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("modulosId");

                    b.HasIndex("rolesId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Productos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("costo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("impuestoId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("precio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("stockMinimo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("impuestoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.PuntoVentas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("responsableId")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("responsableId");

                    b.ToTable("PuntoVentas");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.RegimenesTributarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("RegimenesTributarios");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.TiposSociedades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TiposSociedades");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.TratamientosEmpresas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.Property<string>("porcentaje")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("tipoimpuestoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("empresaId");

                    b.HasIndex("tipoimpuestoId");

                    b.ToTable("TratamientosEmpresas");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Usuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("confirmarContraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("rolesId")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("rolesId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Krat1.Server.Models.Kratos.Roles", b =>
                {
                    b.HasOne("krat1.Server.Models.Kratos.Empresas", "rolempresaFk")
                        .WithMany()
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("rolempresaFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Categorias", b =>
                {
                    b.HasOne("krat1.Server.Models.Kratos.Categorias", "categoriapadreFk")
                        .WithMany()
                        .HasForeignKey("categoriapadreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categoriapadreFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Empresas", b =>
                {
                    b.HasOne("Krat1.Server.Models.Kratos.ActividadEconomicas", "empresaactividadFk")
                        .WithMany()
                        .HasForeignKey("actividadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("krat1.Server.Models.Kratos.RegimenesTributarios", "empresaregimenFk")
                        .WithMany()
                        .HasForeignKey("regimenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("krat1.Server.Models.Kratos.TiposSociedades", "empresasociedadFk")
                        .WithMany()
                        .HasForeignKey("tiposociedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("empresaactividadFk");

                    b.Navigation("empresaregimenFk");

                    b.Navigation("empresasociedadFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Impuestos", b =>
                {
                    b.HasOne("Krat1.Server.Models.Kratos.ActividadEconomicas", "impuestoactividadFk")
                        .WithMany()
                        .HasForeignKey("actividadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("krat1.Server.Models.Kratos.RegimenesTributarios", "impuestoregimenFk")
                        .WithMany()
                        .HasForeignKey("regimenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("krat1.Server.Models.Kratos.TiposSociedades", "impuestosociedadesFk")
                        .WithMany()
                        .HasForeignKey("sociedadesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("impuestoactividadFk");

                    b.Navigation("impuestoregimenFk");

                    b.Navigation("impuestosociedadesFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Inventarios", b =>
                {
                    b.HasOne("krat1.Server.Models.Kratos.Productos", "productoFk")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("krat1.Server.Models.Kratos.PuntoVentas", "puntoventaFk")
                        .WithMany()
                        .HasForeignKey("puntoventaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("productoFk");

                    b.Navigation("puntoventaFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Permisos", b =>
                {
                    b.HasOne("krat1.Server.Models.Kratos.Modulos", "permisosmodulosId")
                        .WithMany()
                        .HasForeignKey("modulosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Krat1.Server.Models.Kratos.Roles", "permisosrolesId")
                        .WithMany()
                        .HasForeignKey("rolesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("permisosmodulosId");

                    b.Navigation("permisosrolesId");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Productos", b =>
                {
                    b.HasOne("krat1.Server.Models.Kratos.Categorias", "categoriaFk")
                        .WithMany()
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("krat1.Server.Models.Kratos.TratamientosEmpresas", "impuestoFk")
                        .WithMany()
                        .HasForeignKey("impuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categoriaFk");

                    b.Navigation("impuestoFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.PuntoVentas", b =>
                {
                    b.HasOne("krat1.Server.Models.Kratos.Usuarios", "usuarioFk")
                        .WithMany()
                        .HasForeignKey("responsableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuarioFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.TratamientosEmpresas", b =>
                {
                    b.HasOne("krat1.Server.Models.Kratos.Empresas", "empresaFk")
                        .WithMany()
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("krat1.Server.Models.Kratos.Impuestos", "impuestosFk")
                        .WithMany()
                        .HasForeignKey("tipoimpuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("empresaFk");

                    b.Navigation("impuestosFk");
                });

            modelBuilder.Entity("krat1.Server.Models.Kratos.Usuarios", b =>
                {
                    b.HasOne("Krat1.Server.Models.Kratos.Roles", "usuariosrolesFk")
                        .WithMany()
                        .HasForeignKey("rolesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuariosrolesFk");
                });
#pragma warning restore 612, 618
        }
    }
}
